[{"/Users/vladimirputin/Desktop/projects/testappforomp/src/index.tsx":"1","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MainPage/index.tsx":"2","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/Header.tsx":"3","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MoviesPage/index.tsx":"4","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MoviesPage/MovieCard.tsx":"5","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/BooksPage/index.tsx":"6","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/BooksPage/BookCard.tsx":"7","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/store.ts":"8","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setGenres.ts":"9","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/reducers/reducer.ts":"10","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/initialState.ts":"11","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setMovies.ts":"12","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setCurrentGenre.ts":"13","/Users/vladimirputin/Desktop/projects/testappforomp/src/utils.ts":"14","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setTopMovies.ts":"15","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/index.tsx":"16","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setBooks.ts":"17","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setMusicGenres.ts":"18","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/MusicCard.tsx":"19","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setNewReleases.ts":"20","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setPlaylists.ts":"21","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/PlaylistCard.tsx":"22","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/FullPlaylistCard.tsx":"23","/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setFullPlaylistInfo.ts":"24"},{"size":721,"mtime":1608851264933,"results":"25","hashOfConfig":"26"},{"size":1063,"mtime":1608851394483,"results":"27","hashOfConfig":"26"},{"size":1012,"mtime":1608486159480,"results":"28","hashOfConfig":"26"},{"size":6973,"mtime":1608568892935,"results":"29","hashOfConfig":"26"},{"size":969,"mtime":1608504334056,"results":"30","hashOfConfig":"26"},{"size":5669,"mtime":1608647107507,"results":"31","hashOfConfig":"26"},{"size":1461,"mtime":1608644062361,"results":"32","hashOfConfig":"26"},{"size":138,"mtime":1608487750547,"results":"33","hashOfConfig":"26"},{"size":258,"mtime":1608495990021,"results":"34","hashOfConfig":"26"},{"size":1090,"mtime":1608848493642,"results":"35","hashOfConfig":"26"},{"size":408,"mtime":1608849625713,"results":"36","hashOfConfig":"26"},{"size":258,"mtime":1608811834070,"results":"37","hashOfConfig":"26"},{"size":270,"mtime":1608500299167,"results":"38","hashOfConfig":"26"},{"size":154,"mtime":1608547012235,"results":"39","hashOfConfig":"26"},{"size":274,"mtime":1608554267868,"results":"40","hashOfConfig":"26"},{"size":6679,"mtime":1608851036432,"results":"41","hashOfConfig":"26"},{"size":250,"mtime":1608636152512,"results":"42","hashOfConfig":"26"},{"size":282,"mtime":1608810186252,"results":"43","hashOfConfig":"26"},{"size":1365,"mtime":1608851025380,"results":"44","hashOfConfig":"26"},{"size":283,"mtime":1608813973008,"results":"45","hashOfConfig":"26"},{"size":270,"mtime":1608818097390,"results":"46","hashOfConfig":"26"},{"size":2769,"mtime":1608849399183,"results":"47","hashOfConfig":"26"},{"size":2404,"mtime":1608850344206,"results":"48","hashOfConfig":"26"},{"size":332,"mtime":1608849782762,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j72j5a",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vladimirputin/Desktop/projects/testappforomp/src/index.tsx",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MainPage/index.tsx",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/Header.tsx",["102"],"import * as React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Nav, NavItem } from 'react-bootstrap';\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <>\n                <Nav justify variant=\"tabs\" >\n                    <Nav.Item>\n                        <LinkContainer to=\"/movies\">\n                        <Nav.Link eventKey={1} >Movies</Nav.Link>\n                        </LinkContainer>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <LinkContainer to=\"/books\">\n                        <Nav.Link eventKey={2} >Books</Nav.Link>\n                        </LinkContainer>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <LinkContainer to=\"/music\">\n                        <Nav.Link eventKey={3}>Music</Nav.Link>\n                        </LinkContainer>\n                    </Nav.Item>\n                </Nav>\n            </>\n        )\n    }\n}\n\nexport default Header",["103","104"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MoviesPage/index.tsx",["105","106","107","108"],"import * as React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport setCurrentGenre from '../../store/actionCreaters/setCurrentGenre';\nimport setGenres from '../../store/actionCreaters/setGenres';\nimport setMovies from '../../store/actionCreaters/setMovies';\nimport setTopMovies from '../../store/actionCreaters/setTopMovies';\nimport store from '../../store/store';\nimport { Genre, Movie, StateInterface } from '../../types';\nimport getRandomInRange from '../../utils';\nimport MovieCard from './MovieCard';\n\n\ninterface PropsFromState {\n    genres: Array<Genre>,\n    movies: Array<Movie>,\n    topMovies: Array<Movie>,\n}\n\nclass MoviesPage extends React.Component<PropsFromState> {\n    state = {\n        price: \"3\",\n        topMovies: []\n    }\n\n    setMoviesByGenre(genre: Genre) {\n        const data = fetch(`https://api.themoviedb.org/3/discover/movie?api_key=5de7737ed4ed99493eb389b2fe3adc9d&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${genre.id}`)\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n    setMoviesByKeyWords(keyword: string) {\n        const data = fetch(`https://api.themoviedb.org/3/search/movie?api_key=5de7737ed4ed99493eb389b2fe3adc9d&language=en-US&query=${keyword}&page=1&include_adult=false`)\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n\n    setMoviesByPrice(price: number) {\n        //TODO: now we rewrite movies in the state, we need to create another statement for filtered movies\n        const currentMovies: Array<Movie> = this.props.movies\n        const filtredMovies = currentMovies.filter(movie =>\n            movie.price ? price >= movie.price : false\n        )\n        store.dispatch(setMovies(filtredMovies))\n    }\n\n    getGenres() {\n        const data = fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=5de7737ed4ed99493eb389b2fe3adc9d&language=en-US\")\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n    getMovies() {\n        const data = fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=5de7737ed4ed99493eb389b2fe3adc9d&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&year=2020\")\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n    componentDidMount() {\n        this.getGenres()\n            .then(data => {\n                const genres: Array<Genre> = data.genres\n                store.dispatch(setGenres(genres))\n            })\n        this.getMovies()\n            .then(data => {\n                const movies: Array<Movie> = data.results\n                movies.map(movie => {\n                    movie.price = getRandomInRange(0, 5)\n                })\n                store.dispatch(setMovies(movies))\n                store.dispatch(setTopMovies(movies))\n                console.log(store.getState().movies)\n            })\n    }\n\n    render() {\n        const genresList = this.props.genres.map((genre: Genre, index) =>\n            <option key={index} value={JSON.stringify(genre)}>{genre.name}</option>\n        )\n        const moviesList = this.props.movies.map((movie: any, index) =>\n            <MovieCard movie={movie} key={index.toString()} />\n        )\n        return (\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"start\"\n            }}>\n                <div style={{\n                    marginTop: \"12px\",\n                    marginLeft: \"12px\"\n                }}>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Search by keywords</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Movie title\" onChange={(e) => {\n                                if (e.target.value) {\n                                    this.setMoviesByKeyWords(e.target.value)\n                                        .then((data) => {\n                                            const movies: Array<Movie> = data.results\n                                            movies.map(movie => {\n                                                movie.price = getRandomInRange(0, 5)\n                                            })\n                                            store.dispatch(setMovies(movies))\n\n                                        })\n                                } else {\n                                    store.dispatch(setMovies(this.props.topMovies))\n                                }\n                            }} />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Search by genre</Form.Label>\n                            <Form.Control as=\"select\" onChange={(e) => {\n                                this.setMoviesByGenre(JSON.parse(e.target.value))\n                                    .then((data) => {\n                                        const movies: Array<Movie> = data.results\n                                        movies.map(movie => {\n                                            movie.price = getRandomInRange(0, 5)\n                                        })\n                                        store.dispatch(setMovies(movies))\n                                        console.log(store.getState().movies)\n                                    })\n                            }}>\n                                {genresList}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicRange\">\n                            <Form.Label>Filter by Price</Form.Label>\n                            <Form.Control type=\"text\" placeholder={`${this.state.price} $`} disabled={true} />\n                            <Form.Control type=\"range\" min=\"0\" max=\"5\" onChange={(e) => {\n                                this.setState({ price: e.target.value })\n                                this.setMoviesByPrice(parseInt(e.target.value))\n                            }} />\n                        </Form.Group>\n                    </Form>\n                </div>\n                <div style={{\n                    marginLeft: \"25%\",\n                    marginTop: \"12px\"\n                }}>\n                    {moviesList}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateInterface): PropsFromState => ({\n    genres: state.genres,\n    movies: state.movies,\n    topMovies: state.topMovies\n})\n\nexport default connect(mapStateToProps)(MoviesPage)","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MoviesPage/MovieCard.tsx",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/BooksPage/index.tsx",["109"],"import * as React from 'react';\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport setBooks from '../../store/actionCreaters/setBooks';\nimport store from '../../store/store';\nimport { Book, StateInterface } from '../../types';\nimport getRandomInRange from '../../utils';\nimport BookCard from './BookCard';\n\ninterface PropsFromState {\n    books: Array<Book>\n}\n\nclass BooksPage extends React.Component<PropsFromState> {\n    state = {\n        price: \"2.5\",\n        author: \"\",\n        bookTitle: \"\"\n    }\n\n    getBooks() {\n        const data = fetch(\"https://www.googleapis.com/books/v1/volumes?q=search+terms&key=AIzaSyAh89PfCOjLrq5Mz1F5q40-CP7pWPKtz0k\")\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n    getBooksByKeywords(keywords: string) {\n        const data = fetch(`https://www.googleapis.com/books/v1/volumes?q=intitle:${keywords}&key=AIzaSyAh89PfCOjLrq5Mz1F5q40-CP7pWPKtz0k`)\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n    getBooksByAuthor(keywords: string) {\n        const data = fetch(`https://www.googleapis.com/books/v1/volumes?q=inauthor:${keywords}&key=AIzaSyAh89PfCOjLrq5Mz1F5q40-CP7pWPKtz0k`)\n            .then((response) => response.json())\n            .then((data) => {\n                return data\n            })\n        return data\n    }\n\n    componentDidMount() {\n        this.getBooks()\n            .then(data => {\n                const books: Array<Book> = data.items\n                books.map(book => {\n                    book.price = getRandomInRange(0, 5)\n                })\n                store.dispatch(setBooks(books))\n                console.log(store.getState().books)\n            })\n    }\n\n    render() {\n        const booksList = this.props.books.map((book: Book, index: any) =>\n            <BookCard book={book} key={index.toString()} />\n        )\n        return (\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"start\"\n            }}>\n                <div style={{\n                    marginTop: \"12px\",\n                    marginLeft: \"12px\"\n                }}>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Search by title</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    placeholder=\"Enter book title\"\n                                    aria-label=\"Recipient's username\"\n                                    aria-describedby=\"basic-addon2\"\n                                    onChange={(e) => this.setState({bookTitle: e.target.value})}\n                                />\n                                <InputGroup.Append>\n                                    <Button variant=\"outline-secondary\" onClick={() => {\n                                this.getBooksByKeywords(this.state.bookTitle)\n                                    .then((data) => {\n                                        const books: Array<Book> = data.items\n                                        store.dispatch(setBooks(books))\n                                    })\n                            }}>Search</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Search by author</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    placeholder=\"Enter author name\"\n                                    aria-label=\"Recipient's username\"\n                                    aria-describedby=\"basic-addon2\"\n                                    onChange={(e) => this.setState({author: e.target.value})}\n                                />\n                                <InputGroup.Append>\n                                    <Button variant=\"outline-secondary\" onClick={() => {\n                                this.getBooksByAuthor(this.state.author)\n                                    .then((data) => {\n                                        const books: Array<Book> = data.items\n                                        store.dispatch(setBooks(books))\n                                    })\n                            }}>Search</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicRange\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" placeholder={`${this.state.price} $`} disabled={true} />\n                            <Form.Control type=\"range\" min=\"0\" max=\"5\" step=\"0.1\" onChange={(e) => { this.setState({ price: e.target.value }) }} />\n                        </Form.Group>\n                    </Form>\n                </div>\n                <div style={{\n                    marginLeft: \"22.5%\",\n                    marginTop: \"12px\"\n                }}>\n                    {booksList}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateInterface): PropsFromState => ({\n    books: state.books,\n})\n\nexport default connect(mapStateToProps)(BooksPage)","/Users/vladimirputin/Desktop/projects/testappforomp/src/components/BooksPage/BookCard.tsx",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/store.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setGenres.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/reducers/reducer.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/initialState.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setMovies.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setCurrentGenre.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/utils.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setTopMovies.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/index.tsx",["110","111"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setBooks.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setMusicGenres.ts",["112"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/MusicCard.tsx",["113","114","115","116"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setNewReleases.ts",[],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setPlaylists.ts",["117"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/PlaylistCard.tsx",["118","119","120","121"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/components/MusicPage/FullPlaylistCard.tsx",["122","123"],"/Users/vladimirputin/Desktop/projects/testappforomp/src/store/actionCreaters/setFullPlaylistInfo.ts",["124"],{"ruleId":"125","severity":1,"message":"126","line":3,"column":15,"nodeType":"127","messageId":"128","endLine":3,"endColumn":22},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":81,"column":34,"nodeType":"136","messageId":"137","endLine":81,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":115,"column":62,"nodeType":"136","messageId":"137","endLine":115,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":132,"column":58,"nodeType":"136","messageId":"137","endLine":132,"endColumn":60},{"ruleId":"134","severity":1,"message":"135","line":51,"column":32,"nodeType":"136","messageId":"137","endLine":51,"endColumn":34},{"ruleId":"125","severity":1,"message":"138","line":48,"column":15,"nodeType":"127","messageId":"128","endLine":48,"endColumn":20},{"ruleId":"125","severity":1,"message":"138","line":98,"column":15,"nodeType":"127","messageId":"128","endLine":98,"endColumn":20},{"ruleId":"125","severity":1,"message":"139","line":1,"column":18,"nodeType":"127","messageId":"128","endLine":1,"endColumn":23},{"ruleId":"125","severity":1,"message":"140","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"141","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"142","line":5,"column":31,"nodeType":"127","messageId":"128","endLine":5,"endColumn":41},{"ruleId":"125","severity":1,"message":"143","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":15},{"ruleId":"125","severity":1,"message":"143","line":1,"column":18,"nodeType":"127","messageId":"128","endLine":1,"endColumn":23},{"ruleId":"125","severity":1,"message":"141","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"143","line":8,"column":10,"nodeType":"127","messageId":"128","endLine":8,"endColumn":15},{"ruleId":"125","severity":1,"message":"144","line":8,"column":17,"nodeType":"127","messageId":"128","endLine":8,"endColumn":23},{"ruleId":"125","severity":1,"message":"145","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":24},{"ruleId":"125","severity":1,"message":"141","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":73,"column":110,"nodeType":"148","endLine":73,"endColumn":170},{"ruleId":"125","severity":1,"message":"139","line":1,"column":36,"nodeType":"127","messageId":"128","endLine":1,"endColumn":41},"@typescript-eslint/no-unused-vars","'NavItem' is defined but never used.","Identifier","unusedVar","no-native-reassign",["149"],"no-negated-in-lhs",["150"],"'setCurrentGenre' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'limit' is assigned a value but never used.","'Genre' is defined but never used.","'BrowserHistory' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'Album' is defined but never used.","'Artist' is defined but never used.","'FullPlaylistCard' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]